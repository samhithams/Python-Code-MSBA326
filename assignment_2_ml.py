# -*- coding: utf-8 -*-
"""Assignment-2-ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aS36pmDFn1KuWW71B0IEw4Qmc5Alk08M
"""
#1
nm = input("Enter your name : ")
print('Welcome ', nm)
#2
cel_temp = int(input("Enter temp in Celsius"))
fah_temp = (cel_temp * 9/5) +32
print('Fahrenheit temperature is :',fah_temp)
#3
no_of_hours = int(input("Input the number of hours: "))
rate_per_hour = int(input("Input the rate/ hour: "))
if no_of_hours > 40:
  regular_rate = 40 * rate_per_hour
  overtime = (no_of_hours - 40) * (1.5*rate_per_hour)
  total_rate = regular_rate + overtime
  print('The gross pay is : ', total_rate)
else:
  regular_rate = no_of_hours * rate_per_hour
  print('The gross pay is : ', regular_rate)
#4
numbers = []
total = 0
count = 0
while True:
  inp = input('Enter a number or "done" to finish ')
  if inp.lower() == 'done':
    break 
  try:
    num = float(inp)
    numbers.append(num)
    count +=1
    total += num
  except:
    print('Enter valid input')

average = total / count 
print('total of numbers', total)
print('Count of numbers', count)
print('average of numbers', average)
#5
smallest = None
print('Before:', smallest)
for itervar in [3, 41, 12, 9, 74, 15]:
 if smallest is None or itervar < smallest :
    smallest = itervar
 print('Loop:', itervar, smallest)
print('Smallest:', smallest)
#6
def computepay(hours,rate):
  if hours <= 40:
    pay = hours * rate
  else:
    regular_pay = 40 *rate
    overtime_hours = (hours - 40) * (1.5 * rate)
    pay = regular_pay + overtime_hours
    
  return pay
#7
def grade (num):
    if num >= 90:
      return 'A'
    elif num >=80:
      return 'B'
    elif num >=70:
      return 'C'
    elif num >=60:
      return 'D' 
    else:
      return 'F'
#8
num_grade = 89.9
num_grade1 = 9
num_grade2 = -2
print(grade(num_grade))
print(grade(num_grade1))
print(grade(num_grade2))

num1 = (1,2)
num2 = (10,20)

res1 = sum(num1)
res2 = sum(num2)

print(f"The sum of {num1} is {res1}")
print(f"The sum of {num2} is {res2}")
#9
lst = []
while True:
  inp = input("Enter the numbers for the list: ")
  if inp.lower() == 'done':
    break
  else:
    list_val = float(inp)
    lst.append(list_val)

maximum_num = max(lst)
print(f"Maximum number is {maximum_num}")
minimum_num = min(lst)
print(f"Minimum number is {minimum_num}")

